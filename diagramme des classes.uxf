<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>255</x>
      <y>215</y>
      <w>140</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>DatabaseManager
{
  - Gère la connexion à SQLite
  - Crée et manipule les tables Batiment et Etage
  - Insère et récupère des données
}
--
- db_name: String
- conn: sqlite3.Connection
- cursor: sqlite3.Cursor

--
+ __init__(db_name: str = "batiments.db")
+ connect()
+ create_tables()
+ insert_batiment(batiment: Batiment)
+ insert_etages(batiment: Batiment)
+ close()
--
Responsibilities
Gérer la base de données SQLite
Interagir avec la classe Batiment</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>165</x>
      <y>490</y>
      <w>285</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>DatabaseGenerator

--
 - dico_adresse: Dict[str, str]
--
  + generer_salles_batiment(numbat: int, salleParetage: List[int], indices_depart: List[int])
  + ajouter_salles(numbat: int, salles: List[str]) 
  + extract_adresse(dic: Dict[str, str], numbat: int) -&gt; List[float] 
  + inserer_adresses_bdd(dic: Dict[str, str])
--
Responsibilities
  - Génère les bâtiments et leurs salles dans la base de données
  - Insère et met à jour les adresses GPS des bâtiments</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>235</y>
      <w>130</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>Batiment
--
  - numBat: int 
  - salleParetage: List[int] 
  - nbetage: int
  - listesalle: List[str] 
  - indices_depart: List[int] 
  - nom: str
--
  + __init__(numBat: int, salleParetage: List[int], indices_depart: List[int] = None, nom: str = "") \\l
  + generationlistesalle() 
  + afficher_salles()
--
Responsibilities
-- Modéliser un bâtiment 
--Générer dynamiquement les salles
--Afficher les salles du bâtiment</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>355</x>
      <y>60</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Main
--
- mapview: MapView
- geojson_layers: List[GeoJsonMapLayer]
- route_layer: GeoJsonMapLayer 
--
+ build() 
+ load_geojson_layers(directory: str) 
+ toggle_opacity(dt: float) 
+ calculate_route() 
+ add_route_to_map(geojson_file: str)
--
Responsibilities
-- Gérer l'interface utilisateur et la carte interactive 
-- Charger et afficher les itinéraires et bâtiments sur la carte </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>605</x>
      <y>265</y>
      <w>255</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>ValhallaRouteService
--
- API_URL: String 
--
+ get_valhalla_route(start: List[float], end: List[float], filename: str 
--
Responsibilities
-- Récupérer un itinéraire pédestre entre deux points 
-- Générer et corriger un fichier GeoJSON contenant le trajet 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>175</y>
      <w>145</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;80.0;270.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>175</y>
      <w>70</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>120.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>365</y>
      <w>200</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>380.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>305</y>
      <w>75</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=n
stocke les batiments</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>315</x>
      <y>375</y>
      <w>80</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=n
génére les batiments</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>175</y>
      <w>275</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>530.0;180.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
